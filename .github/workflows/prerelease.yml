name: Prerelease

on:
  push:
    tags:
      - 'prerelease'

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: '${{ secrets.TOLGEE_MACHINE_PAT }}'
          # fetch full history for lerna version to work
          fetch-depth: 0

      - name: Build
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8.15.9
          run_install: false

      - name: Create branch
        run: git checkout -b prerelease.$(git rev-parse --short HEAD)

      - name: Set git globals
        run: |
          git config --local user.email "machine@tolgee.io"
          git config --local user.name "Tolgee Machine"

      - name: Install
        run: pnpm install --no-frozen-lockfile

      - name: Update version locally
        run: |
          lerna version prerelease --yes --conventional-prerelease --preid prerelease.$(git rev-parse --short HEAD) \
            --force-publish --no-push --no-git-tag-version --exact

      # Set TOLGEE_UI_VERSION for @tolgee/core build
      - name: Set env
        run: |
          echo "TOLGEE_UI_VERSION=$(pnpm run --silent ui-version)" >> $GITHUB_ENV
          pnpm run --silent ui-version

      - name: Build all packages
        run: pnpm build || pnpm build

      - name: Recreate release with push
        run: |
          git stash
          git push --follow-tags -u origin $(git rev-parse --abbrev-ref HEAD)
          lerna version prerelease --yes --conventional-prerelease --preid prerelease.$(git rev-parse --short HEAD) \
            --force-publish --exact --create-release github
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > ~/.npmrc

      - name: Publish
        run: lerna publish from-package --yes --dist-tag prerelease
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
