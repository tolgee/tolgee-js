name: Test

on:
  push:
    branches-ignore:
      - 'main'
      - 'rc-*'

jobs:
  test:
    name: 'Test'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - run: npm install -g npm@7

      - name: Cache .npm
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-test-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            npm-test-${{ runner.os }}-

      - name: Cache root node_modules
        uses: actions/cache@v2
        with:
          path: 'node_modules'
          key: root-node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - name: Cache packages node_modules
        uses: actions/cache@v2
        with:
          path: 'packages/*/node_modules'
          key: packages-node-modules-${{ runner.os }}-${{ hashFiles('packages/*/package-lock.json') }}

      - name: Cache testapps node_modules
        uses: actions/cache@v2
        with:
          path: 'testapps/*/node_modules'
          key: testapps-node-modules-${{ runner.os }}-${{ hashFiles('testapps/*/package-lock.json') }}

      - name: Turbo Cache
        id: turbo-cache
        uses: actions/cache@v2
        with:
          path: .turbo
          key: turbo-${{ github.job }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ github.job }}-

      - name: Install
        run: npm run ci:install:root && npm run bootstrap

      - name: Build all packages
        run: npm run ci:build

      - name: Test
        run: npm run ci:test

  cypress-prepare:
    name: 'Cypress prepare'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - run: npm install -g npm@7

      - name: Cache .npm
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-cypress-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            npm-cypress-${{ runner.os }}-

      - name: Cache root node_modules
        uses: actions/cache@v2
        with:
          path: 'node_modules'
          key: root-node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - name: Cache packages node_modules
        uses: actions/cache@v2
        with:
          path: 'packages/*/node_modules'
          key: packages-node-modules-${{ runner.os }}-${{ hashFiles('packages/*/package-lock.json') }}

      - name: Cache testapps node_modules
        uses: actions/cache@v2
        with:
          path: 'testapps/*/node_modules'
          key: testapps-node-modules-${{ runner.os }}-${{ hashFiles('testapps/*/package-lock.json') }}

      - name: Cache e2e node_modules
        uses: actions/cache@v2
        with:
          path: |
            'e2e/node_modules'
            '~/.cache/Cypress'
          key: e2e-node-modules-${{ runner.os }}-${{ hashFiles('e2e/package-lock.json') }}

      - name: Cache build results
        uses: actions/cache@v2
        with:
          path: |
            */*/dist
            */*/lib
            */*/package
            */*/build
            */*/.next
            */*/.angular
            */*/.svelte-kit
            */*/dist-e2e
            */*/build-e2e
            testapps/gatsby/public
          key: e2e-build-${{ runner.os }}-${{ github.sha }}

      - name: Turbo Cache
        id: turbo-cache
        uses: actions/cache@v2
        with:
          path: .turbo
          key: turbo-${{ github.job }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ github.job }}-

      - name: Install
        run: npm run ci:init

      - name: Build
        run: npm run ci:build

      - name: Build e2e
        run: npm run ci:build:e2e

      - id: set-dirs
        run: echo "::set-output name=dirs::$(ls | jq -R -s -c 'split("\n")[:-1]')"
        working-directory: e2e/cypress/integration

    outputs:
      dirs: ${{ steps.set-dirs.outputs.dirs }}

  cypress:
    name: 'Cypress'
    # cypress-prepare will install and build everything into cache
    needs: cypress-prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        app: ${{ fromJson(needs.cypress-prepare.outputs.dirs) }}

    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - run: npm install -g npm@7

      - name: Cache root node_modules
        uses: actions/cache@v2
        with:
          path: 'node_modules'
          key: root-node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - name: Cache packages node_modules
        uses: actions/cache@v2
        with:
          path: 'packages/*/node_modules'
          key: packages-node-modules-${{ runner.os }}-${{ hashFiles('packages/*/package-lock.json') }}

      - name: Cache testapps node_modules
        uses: actions/cache@v2
        with:
          path: 'testapps/*/node_modules'
          key: testapps-node-modules-${{ runner.os }}-${{ hashFiles('testapps/*/package-lock.json') }}

      - name: Cache e2e node_modules
        uses: actions/cache@v2
        with:
          path: |
            'e2e/node_modules'
            '~/.cache/Cypress'
          key: e2e-node-modules-${{ runner.os }}-${{ hashFiles('e2e/package-lock.json') }}

      - name: Cache build results
        uses: actions/cache@v2
        with:
          path: |
            */*/dist
            */*/lib
            */*/package
            */*/build
            */*/.next
            */*/.angular
            */*/.svelte-kit
            */*/dist-e2e
            */*/build-e2e
            testapps/gatsby/public
          key: e2e-build-${{ runner.os }}-${{ github.sha }}

      - name: Install
        run: npm run ci:init

      - name: Cypress
        run: npm --prefix=e2e run start
        env:
          E2E_APP: ${{matrix.app}}

      - name: Cypress cleanup
        if: always()
        run: npm --prefix=e2e run services:stop

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress
          path: |
            e2e/cypress/videos/**/*
            e2e/cypress/screenshots/**/*

  code-checks:
    name: Eslint ðŸª²
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Cache .npm
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ github.job }}-${{ github.sha }}
          restore-keys: |
            npm-${{ github.job }}-

      - run: npm install -g npm@7

      - name: Install
        run: npm run ci:install:root
        working-directory: ./

      - name: Eslint
        run: npm run eslint
        working-directory: ./
